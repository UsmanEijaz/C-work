<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>