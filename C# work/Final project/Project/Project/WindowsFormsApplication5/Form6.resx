<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gaNAEohAYssoQgBCEIAQhCAEIQgBCEID/9k=
</value>
  </data>
</root>