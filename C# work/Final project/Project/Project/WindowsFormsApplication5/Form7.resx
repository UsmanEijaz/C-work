<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>